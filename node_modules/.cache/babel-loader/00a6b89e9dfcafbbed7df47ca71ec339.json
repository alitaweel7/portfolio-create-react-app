{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _carbonComponents = require(\"carbon-components\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar prefix = _carbonComponents.settings.prefix;\n\nvar ButtonSkeleton = function ButtonSkeleton(_ref) {\n  var _classNames;\n\n  var small = _ref.small,\n      href = _ref.href;\n  var buttonClasses = (0, _classnames.default)((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--btn\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--btn--sm\"), small), _classNames));\n  var commonProps = {\n    className: buttonClasses\n  };\n\n  var button = _react.default.createElement(\"div\", commonProps);\n\n  var anchor = _react.default.createElement(\"a\", _extends({}, commonProps, {\n    href: href,\n    role: \"button\"\n  })); // eslint-disable-line\n\n\n  return href ? anchor : button;\n};\n\nButtonSkeleton.propTypes = {\n  /**\n   * Specify whether the Button should be a small variant\n   */\n  small: _propTypes.default.bool,\n\n  /**\n   * Optionally specify an href for your Button to become an <a> element\n   */\n  href: _propTypes.default.string\n};\nButtonSkeleton.defaultProps = {\n  small: false\n};\nvar _default = ButtonSkeleton;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}